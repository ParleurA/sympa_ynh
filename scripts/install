#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

# Arguments from manifest
readonly APP=$YNH_APP_INSTANCE_NAME
readonly DOMAIN=$YNH_APP_ARG_DOMAIN
readonly APP_URI=$YNH_APP_ARG_PATH
readonly APP_ADMIN=$YNH_APP_ARG_ADMIN
readonly APP_LANGUAGE=$YNH_APP_ARG_LANGUAGE
readonly APP_IS_PUBLIC="1"

readonly NGINX_CONF_TEMPLATE="$PWD/../conf/nginx.conf"
readonly SYMPA_REGEN_CONF_HOOK="$PWD/../hooks/99-postfix_sympa"
readonly SYMPA_GENERAL_ALIASES="$PWD/../conf/sympa_general_aliases"
readonly SYMPA_FCGI_SERVICE_TEMPLATE="$PWD/../conf/sympa-fcgi.service"
readonly SYMPA_HOME="/home/sympa"


# Source YunoHost helpers
source /usr/share/yunohost/helpers

readonly SYMPA_FCGI_PORT=$(ynh_find_port 8442)

readonly SYMPA_VERSION="sympa-6.2.16"
readonly TMP_DIR="/tmp/sympa-install"
readonly TMP_DIR_SYMPA_VERSION="$TMP_DIR/$SYMPA_VERSION"

function configure_app()
{
    #Â Save app settings
    ynh_app_setting_set "$APP" admin     "$APP_ADMIN"
    ynh_app_setting_set "$APP" language  "$APP_LANGUAGE"

    # Check domain/path availability
    sudo yunohost app checkurl "${DOMAIN}${APP_URI}" -a "$APP" \
        || ynh_die "Path not available: ${DOMAIN}${APP_URI}"
}

function init_sympa_mysqldb()
{
    # Generate random password
    db_user=sympa
    db_pwd=$(ynh_string_random)

    # Initialize database and store mysql password for upgrade
    # FIXME
    sudo yunohost app initdb $db_user -p $db_pwd || echo "FIXME: Database already exists"
    ynh_app_setting_set "$APP" mysqlpassword     "$db_pwd"

}

function install_sympa_dependencies()
{
    sudo apt-get update
    sudo apt-get install -y \
        build-essential mhonarc xml-twig-tools \
        libarchive-zip-perl libauthcas-perl libcgi-fast-perl libcgi-pm-perl \
        libclass-singleton-perl libclone-perl libcrypt-ciphersaber-perl \
        libcrypt-openssl-x509-perl libcrypt-smime-perl libdata-password-perl \
        libdatetime-format-mail-perl libdatetime-timezone-perl libdbd-csv-perl \
        libdbi-perl libemail-simple-perl libencode-perl \
        libfile-copy-recursive-perl libfile-nfslock-perl libhtml-format-perl \
        libhtml-stripscripts-parser-perl libhtml-tree-perl libintl-perl \
        libio-stringy-perl libmail-dkim-perl libmailtools-perl \
        libmime-charset-perl libmime-encwords-perl libmime-lite-html-perl \
        libmime-tools-perl libmsgcat-perl libnet-cidr-perl libnet-dns-perl \
        libnet-ldap-perl libproc-processtable-perl libregexp-common-perl \
        libscalar-list-utils-perl libsoap-lite-perl libssl-dev libtemplate-perl \
        libterm-progressbar-perl libunicode-linebreak-perl liburi-perl \
        libwww-perl libxml2-dev libxml-libxml-perl libxml-perl \

    rm -f /tmp/sympa-cpan-deps-install.log
    CPANDEPENDENCIES="MHonArc::UTF8 MIME::Charset"
    for DEP in $CPANDEPENDENCIES
    do
        echo "Installing CPAN module $DEP ..."
        echo "yes" | sudo cpan -T $DEP >> /tmp/sympa-cpan-deps-install.log 2>&1
    done
}

function install_sympa_from_sources()
{
   # Create a user with its home
   sudo adduser --disabled-login --gecos Sympa sympa || true
   mkdir -p $SYMPA_HOME

   # We also need a tmp dir to unpack sources...
   mkdir -p $TMP_DIR
   cd $TMP_DIR

   # Fetch sources
   wget --quiet http://www.sympa.org/distribution/$SYMPA_VERSION.tar.gz
   tar -xf $SYMPA_VERSION.tar.gz
   cd $TMP_DIR_SYMPA_VERSION

   # Configure, make...
   ./configure \
       --enable-fhs \
       --without-initdir \
       --with-unitsdir=/etc/systemd/system \
       --disable-smtpc

   make > make.log 2>&1

   # Hack DBD CSV version requirement
   sed -i -e "s/ package_name => 'DBD-CSV',/ package_name => 'DBD-CSV', required_version => '0.45',/g" $TMP_DIR_SYMPA_VERSION/src/lib/Sympa/ModDef.pm

   # Hack sympa wizard to use "Mysql" for the database and disable some
   # questions
   SYMPA_WIZARD="$TMP_DIR_SYMPA_VERSION/src/sbin/sympa_wizard.pl"
   sudo sed -e 's@my \$db_type;@my $db_type = "mysql";@' \
            -e 's@my \$rep = <STDIN>;@\#my $rep = <STDIN>;@' \
            -e 's@foreach my \$mod (sort keys %\$cpan_modules) {@foreach my $mod (sort keys %$cpan_modules) {\n        next if ($mod eq "DBD::Oracle" || $mod eq "DBD::Sybase" || $mod eq "DBD::Pg" || $mod eq "DBD::ODBC" || $mod eq "DBD::SQLite");@'\
            -i $SYMPA_WIZARD

   # FIXME : Delete when remove script is correct
   # Note : it's not clear if the install works without this even when app got
   # correctly removed right before...
   rm -f $SYMPA_HOME/etc/sympa/sympa.conf.bin

   sudo make install > makeinstall.log 2>&1

}

function configure_sympa()
{
   # Generate random sympa cookie
   sympacookie=$(ynh_string_random)
   sudo yunohost app setting $APP sympacookie -v $sympacookie

   sudo $SYMPA_WIZARD --check
   sudo $SYMPA_WIZARD --batch \
       email=sympa \
       listmaster=$APP_ADMIN@$DOMAIN \
       db_type=mysql \
       db_name=sympa \
       db_host=localhost \
       db_user=$db_user \
       db_passwd=$db_pwd \
       cookie=$sympacookie \
       static_content_url=/sympa/static

   sudo systemctl daemon-reload
   sudo systemctl enable sympa.service
}

function configure_postfix()
{
    # FIXME - feels weird that this folder has to be created ???
    mkdir -p /etc/mail/
    cp $SYMPA_GENERAL_ALIASES /etc/mail/sympa_general_aliases
    postmap /etc/mail/sympa_general_aliases

    # Add postfix conf hook
    cp $SYMPA_REGEN_CONF_HOOK /usr/share/yunohost/hooks/conf_regen/
    yunohost service regen-conf postfix
}

function install_fcgi_service()
{
    sudo apt-get install -y spawn-fcgi
    sed -i "s@__SYMPA_PORT__@$SYMPA_FCGI_PORT@g" $SYMPA_FCGI_SERVICE_TEMPLATE
    sed -i "s@__SYMPA_HOME__@$SYMPA_HOME@g" $SYMPA_FCGI_SERVICE_TEMPLATE
    sudo cp $SYMPA_FCGI_SERVICE_TEMPLATE /etc/systemd/system/sympa-fcgi.service

    sudo systemctl daemon-reload
    sudo systemctl enable sympa-fcgi.service
    sudo systemctl start sympa-fcgi.service
}

function configure_nginx_and_ssowat()
{
    # Modify Nginx configuration file and copy it to Nginx conf directory
    sed -i "s@__SYMPA_WEBPATH__@$APP_URI@g" $NGINX_CONF_TEMPLATE
    sed -i "s@__SYMPA_HOME__@$SYMPA_HOME@g" $NGINX_CONF_TEMPLATE
    sed -i "s@__SYMPA_PORT__@$SYMPA_FCGI_PORT@g" $NGINX_CONF_TEMPLATE

    sudo cp $NGINX_CONF_TEMPLATE /etc/nginx/conf.d/$DOMAIN.d/$APP.conf

    # If app is public, add url to SSOWat conf as skipped_uris
    if [[ $APP_IS_PUBLIC -eq 1 ]]; then
        # unprotected_uris allows SSO credentials to be passed anyway.
        ynh_app_setting_set "$APP" unprotected_uris "/"
    fi

    sudo service nginx reload

}


configure_app
init_sympa_mysqldb
install_sympa_dependencies
install_sympa_from_sources
configure_sympa
configure_postfix
install_fcgi_service
configure_nginx_and_ssowat

