#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

# Arguments from manifest
readonly APP=$YNH_APP_INSTANCE_NAME
readonly DOMAIN=$YNH_APP_ARG_DOMAIN
readonly APP_URI=$YNH_APP_ARG_PATH
readonly APP_ADMIN=$YNH_APP_ARG_ADMIN
readonly APP_LANGUAGE=$YNH_APP_ARG_LANGUAGE

readonly APP_INSTALL_PATH="/var/www/sympa"
readonly NGINX_CONF_TEMPLATE="$PWD/../conf/nginx.conf"

# Source YunoHost helpers
source /usr/share/yunohost/helpers

readonly SYMPA_VERSION="sympa-6.2.16"

function configure_app()
{
    #Â Save app settings
    ynh_app_setting_set "$APP" admin     "$APP_ADMIN"
    ynh_app_setting_set "$APP" is_public "$APP_IS_PUBLIC"
    ynh_app_setting_set "$APP" language  "$APP_LANGUAGE"

    # Check domain/path availability
    sudo yunohost app checkurl "${DOMAIN}${APP_URI}" -a "$APP" \
        || ynh_die "Path not available: ${DOMAIN}${APP_URI}"
}

function init_sympa_mysqldb()
{
	# Generate random password
	db_user=sympa
    db_pwd=$(ynh_string_random)

	# Initialize database and store mysql password for upgrade
    # FIXME
	sudo yunohost app initdb $db_user -p $db_pwd || echo "FIXME: Database already exists"
	ynh_app_setting_set "$APP" mysqlpassword     "$db_pwd"

}

function install_sympa_dependencies()
{
    sudo apt-get update
	sudo apt-get install -y \
        build-essential libxml-perl libmime-lite-html-perl mhonarc libssl-dev \
        libcrypt-smime-perl libdbd-csv-perl xml-twig-tools libxml2-dev \
        libsoap-lite-perl libdbi-perl libarchive-zip-perl libmailtools-perl \
        libmsgcat-perl libmime-tools-perl libio-stringy-perl libnet-ldap-perl \
        libcgi-fast-perl libintl-perl libmime-charset-perl libmime-encwords-perl \
        libtemplate-perl libxml-libxml-perl libcgi-pm-perl \
        libhtml-stripscripts-parser-perl libhtml-tree-perl libhtml-format-perl \
        mhonarc libregexp-common-perl libclass-singleton-perl \
        libdatetime-format-mail-perl libdatetime-timezone-perl libdbi-perl \
        libemail-simple-perl libencode-perl libfile-copy-recursive-perl \
        libfile-nfslock-perl libhtml-stripscripts-parser-perl \
        libmime-charset-perl libmime-encwords-perl libmime-tools-perl \
        libnet-cidr-perl libnet-dns-perl libproc-processtable-perl \
        libtemplate-perl libterm-progressbar-perl libauthcas-perl libclone-perl \
        libcrypt-ciphersaber-perl libcrypt-openssl-x509-perl \
        libdata-password-perl libmail-dkim-perl liburi-perl \
        libunicode-linebreak-perl libmailtools-perl libwww-perl libintl-perl \
        libscalar-list-utils-perl libio-stringy-perl libhtml-tree-perl \

    #CPANDEPENDENCIES="HTML::FormatText"
    #for DEP in $CPANDEPENDENCIES
    #do
    #    echo "Installing CPAN module $DEP ..."
    #    echo "yes" | sudo cpan -T $DEP >> /tmp/sympa-cpan-deps-install.log 2>&1
    #done
}

function install_sympa_from_sources()
{
   local INSTALL_DIR="/tmp/sympa-install"
   # FIXME
   sudo adduser --disabled-login --gecos Sympa sympa || true
   mkdir -p $INSTALL_DIR
   cd $INSTALL_DIR

   wget --quiet http://www.sympa.org/distribution/$SYMPA_VERSION.tar.gz
   tar -xvf $SYMPA_VERSION.tar.gz
   cd $INSTALL_DIR/$SYMPA_VERSION

   ./configure \
       --without-initdir \
       --with-unitsdir=/etc/systemd/system \
       --disable-smtpc
   make

   # Hacking DBD CSV version requirement
   sed -i -e "s/ package_name => 'DBD-CSV',/ package_name => 'DBD-CSV', required_version => '0.45',/g" $INSTALL_DIR/$SYMPA_VERSION/src/lib/Sympa/ModDef.pm

   sudo make install

   # Hacking sympa wizard to use "Mysql" for the database
   SYMPA_WIZARD="/home/sympa/sbin/sympa_wizard.pl"
   sudo sed -e 's@my \$db_type;@my $db_type = "mysql";@' \
            -e 's@my \$rep = <STDIN>;@\#my $rep = <STDIN>;@' \
            -e 's@foreach my \$mod (sort keys %\$cpan_modules) {@foreach my $mod (sort keys %$cpan_modules) {\n        next if ($mod eq "DBD::Oracle" || $mod eq "DBD::Sybase" || $mod eq "DBD::Pg" || $mod eq "DBD::ODBC" || $mod eq "DBD::SQLite");@'\
            -i $SYMPA_WIZARD

   # FIXME : Delete when remove script is correct
   rm -f /home/sympa/etc/sympa/sympa.conf.bin

   # Generate random sympa cookie
   sympacookie=$(ynh_string_random)
   sudo yunohost app setting $APP sympacookie -v $sympacookie

   sudo $SYMPA_WIZARD --check
   sudo $SYMPA_WIZARD --batch \
       email=sympa \
       listmaster=$APP_ADMIN@$DOMAIN \
       db_type=mysql \
       db_name=sympa \
       db_host=localhost \
       db_user=$db_user \
       db_passwd=$db_pwd \
       cookie=$sympacookie

    sudo systemctl daemon-reload
    sudo systemctl enable sympa.service
    sudo systemctl start sympa.service

}

function configure_nginx_and_ssowat()
{
    # Modify Nginx configuration file and copy it to Nginx conf directory
    sed -i "s@YNH_WWW_PATH@$APP_URI@g" $NGINX_CONF_TEMPLATE
    sed -i "s@YNH_WWW_ALIAS@$APP_INSTALL_PATH/@g" $NGINX_CONF_TEMPLATE
    sudo cp $NGINX_CONF_TEMPLATE /etc/nginx/conf.d/$DOMAIN.d/$APP.conf

    # If app is public, add url to SSOWat conf as skipped_uris
    if [[ $APP_IS_PUBLIC -eq 1 ]]; then
        # unprotected_uris allows SSO credentials to be passed anyway.
        ynh_app_setting_set "$APP" unprotected_uris "/"
    fi

    sudo service nginx reload
}

echo "DEBUG : initializing sympa db"
init_sympa_mysqldb
echo "DEBUG : installing sympa dependencies"
install_sympa_dependencies
echo "DEBUG : installing sympa from sources"
install_sympa_from_sources


